
Parse tree (Lisp format):
(program 
        (programHeading PROGRAM 
            (identifier hey) ;) 
        (block 
            (variableDeclarationPart VAR 
                (variableDeclaration 
                    (identifierList 
                        (identifier a) , 
                        (identifier b) , 
                        (identifier c)) : 
                    (type_ 
                        (simpleType 
                            (typeIdentifier integer)))) ;) 
            (compoundStatement BEGIN 
                (statements 
                    (statement 
                        (unlabelledStatement 
                            (simpleStatement 
                                (assignmentStatement 
                                    (variable 
                                        (identifier a)) := 
                                    (expression 
                                        (simpleExpression 
                                            (term 
                                                (signedFactor 
                                                    (factor 
                                                        (unsignedConstant 
                                                            (unsignedNumber 
                                                                (unsignedInteger 1)))))))))))) ; 
                    (statement 
                        (unlabelledStatement 
                            (simpleStatement 
                                (assignmentStatement 
                                    (variable 
                                        (identifier b)) := 
                                    (expression 
                                        (simpleExpression 
                                            (term 
                                                (signedFactor 
                                                    (factor 
                                                        (unsignedConstant 
                                                            (unsignedNumber 
                                                                (unsignedInteger 1)))))))))))) ; 
                    (statement 
                        (unlabelledStatement 
                            (simpleStatement 
                                (assignmentStatement 
                                    (variable 
                                        (identifier c)) := 
                                    (expression 
                                        (simpleExpression 
                                            (term 
                                                (signedFactor 
                                                    (factor 
                                                        (variable 
                                                            (identifier a))))) 
                                            (additiveoperator +) 
                                            (simpleExpression 
                                                (term 
                                                    (signedFactor 
                                                        (factor 
                                                            (variable 
                                                                (identifier b)))))))))))) ; 
                    (statement 
                        (unlabelledStatement 
                            (simpleStatement emptyStatement_)))) END)) . <EOF>)

SYMTABS / TYPEDEFS:
Nesting Level 0------------------------------------------------------
  NAME                KIND                  TYPE
  abs                 FUNCTION              undefined
  arctan              FUNCTION              undefined
  boolean             type                  boolean Scalar
  char                type                  char Scalar
  chr                 FUNCTION              undefined
  cos                 FUNCTION              undefined
  eof                 FUNCTION              undefined
  eoln                FUNCTION              undefined
  exp                 FUNCTION              undefined
  false               enumeration constant  boolean Scalar
  hey                 PROGRAM               undefined
  integer             type                  integer Scalar
  ln                  FUNCTION              undefined
  odd                 FUNCTION              undefined
  ord                 FUNCTION              undefined
  pred                FUNCTION              undefined
  read                PROCEDURE             undefined
  readln              PROCEDURE             undefined
  real                type                  real Scalar
  round               FUNCTION              undefined
  sin                 FUNCTION              undefined
  sqr                 FUNCTION              undefined
  sqrt                FUNCTION              undefined
  string              type                  string Scalar
  succ                FUNCTION              undefined
  true                enumeration constant  boolean Scalar
  trunc               FUNCTION              undefined
  write               PROCEDURE             undefined
  writeln             PROCEDURE             undefined
-----------------------------------------------------------------------
Nesting Level 1------------------------------------------------------
  NAME                KIND                  TYPE
  a                   variable              integer Scalar
  b                   variable              integer Scalar
  c                   variable              integer Scalar
-----------------------------------------------------------------------
